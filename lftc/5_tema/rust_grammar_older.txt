program = struct_list "fn" "main" "(" ")" bloc_instr.

struct_list = | struct struct_list.

struct = "struct" "id" "{" struct_membru_list "}".
struct_membru_list = | struct_membru "," struct_membru_list.
struct_membru = "id" ":" path.

bloc_instr = "{" instr_list "}".

instr_list = | instr instr_list.
instr =
    ";"
  | instr_if
  | instr_while
  | instr_declarare ";"
  | instr_asignare ";"
  | instr_afisare ";".

instr_if = "if" expr bloc_instr.

instr_while = "while" expr bloc_instr.

instr_declarare = "let" instr_declarare_mut "id" instr_declarare_path "=" expr.
instr_declarare_mut = | "mut".
instr_declarare_path = | ":" path.

instr_asignare = "id" "=" expr.

instr_afisare = "println!" "(" parametri_apel ")".

expr_primary = path | "lit".
expr_unop =
      expr_primary
	| unop expr_primary
    | path "(" parametri_apel ")"
    | expr "." "id" "(" parametri_apel ")"
    | expr "." "id"
.
parametri_apel = | expr "," parametri_apel | expr.
expr_binop =
      expr_unop
    | expr_unop binop expr_binop
.

expr = expr_binop.

unop = "!" | "&" | "&mut".
binop =
    "+" | "-" | "*" | "/" | "%"
  | "<" | ">" | "<=" | ">=" | "==" | "!=".

lit_struct = "id" "{" lit_struct_membri_list "}".
lit_struct_membri_list = | lit_struct_membru "," lit_struct_membri_list.
lit_struct_membru = "id" ":" expr.

path = "id" | "id" "::" path.
